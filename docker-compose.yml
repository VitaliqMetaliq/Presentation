version: '3.4'

services:
  postgres:
    image: postgres
    container_name: exchange_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
    build:
      context: .
      dockerfile: RabbitMQ/Dockerfile
    container_name: exchange_rabbit
    ports:
      - 5672:5672
      - 15672:15672

  redis:
    image: redis
    container_name: exchange_redis
    restart: always
    ports:
      - 6379:6379

  crawler.main:
    image: ${DOCKER_REGISTRY-}crawlermain
    build:
      context: .
      dockerfile: Crawler/Crawler.Main/Dockerfile
    ports:
      - 8001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy

  storage.main:
    image: ${DOCKER_REGISTRY-}storagemain
    build:
      context: .
      dockerfile: Storage/Storage.Main/Dockerfile
    ports:
      - 7001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy

  converter.main:
    image: ${DOCKER_REGISTRY-}convertermain
    build:
      context: .
      dockerfile: Converter/Converter.Main/Dockerfile
    ports:
      - 6001:80
        
